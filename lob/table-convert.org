* Convert last column of a table to checked columns                   :emacs:
  :PROPERTIES:
  :Effort:   1:00
  :END:

Convert a table with same data in all columns except last one to a
table where individual options for column are in columns, and X
indicates if given line exists or not.

#+NAME: rows-to-column-check
#+BEGIN_SRC emacs-lisp :var data=rows-to-cols-test :colnames no
  (let (rows vals res)
    (dolist (row (cdr data))
      (cl-pushnew (butlast row) rows
                  :test #'equal)
      (cl-pushnew (car (last row)) vals))
    (setq vals (nreverse vals))
    (dolist (row rows)
      (push (append row
                    (mapcar (lambda (val)
                              (if (member (append row (list val)) data)
                                  "X" ""))
                            vals))
            res))
    `((,@(butlast (car data)) ,@vals) hline  ,@res))
#+END_SRC

#+RESULTS: rows-to-column-check
| f   | B   | 1 | 2 |
|-----+-----+---+---|
| foo | bar | X | X |
| foo | bah |   | X |

Example source
#+TBLNAME:rows-to-cols-test
| f   | B   | res | val |
|-----+-----+-----+-----|
| foo | bar |   1 | u   |
| foo | bar |   2 | g   |
| foo | bah |   2 | h   |

produces the result

#+RESULTS: rows-to-cols
| f   | B   | 1 | 2 |
|-----+-----+---+---|
| foo | bar | X | X |
| foo | bah |   | X |

#+NAME: rows-to-column-value
#+BEGIN_SRC emacs-lisp :var data=rows-to-cols-test :colnames no :var sort='nreverse :var sortpars='()
  (let (rows vals res)
    (dolist (row (cdr data))
      (cl-pushnew (butlast row 2) rows
		  :test #'equal)
      (cl-pushnew (car (last row 2)) vals))
    (setq vals (apply sort vals sortpars))
    (dolist (row rows)
      (push (append row
		    (mapcar (lambda (val)
			      (let ((match
				     (cl-find-if (lambda (item)
						   (equal (append row (list val))
							  (butlast item)))
						 data)))
				(if match
				    (car (last match)) "")))
		    vals))
      res))
    `((,@(butlast (car data) 2) ,@vals) hline  ,@res))
#+END_SRC

#+RESULTS: rows-to-column-value
| f   | B   | 1 | 2 |
|-----+-----+---+---|
| foo | bar | u | g |
| foo | bah |   | h |
